[{"/Users/mac/www/tugether/src/configureStore.js":"1","/Users/mac/www/tugether/src/slices/session/index.js":"2","/Users/mac/www/tugether/src/index.js":"3","/Users/mac/www/tugether/src/App.js":"4","/Users/mac/www/tugether/src/utils/history.js":"5","/Users/mac/www/tugether/src/services/firebase.js":"6","/Users/mac/www/tugether/src/components/Header/index.js":"7","/Users/mac/www/tugether/src/components/Footer/index.js":"8","/Users/mac/www/tugether/src/pages/Home/index.js":"9","/Users/mac/www/tugether/src/pages/PageNotFound/index.js":"10","/Users/mac/www/tugether/src/components/Modal/index.js":"11","/Users/mac/www/tugether/src/pages/Room/index.js":"12","/Users/mac/www/tugether/src/components/Player/index.js":"13","/Users/mac/www/tugether/src/assets/icons/Play.js":"14","/Users/mac/www/tugether/src/firebase/config.js":"15","/Users/mac/www/tugether/src/assets/icons/Rewind.js":"16","/Users/mac/www/tugether/src/assets/icons/FastForward.js":"17","/Users/mac/www/tugether/src/components/Slider/index.js":"18","/Users/mac/www/tugether/src/assets/icons/ArrowsExpand.js":"19","/Users/mac/www/tugether/src/slices/session/selector.js":"20","/Users/mac/www/tugether/src/assets/icons/VolumeUp.js":"21","/Users/mac/www/tugether/src/assets/icons/VolumeOff.js":"22","/Users/mac/www/tugether/src/assets/icons/Pause.js":"23","/Users/mac/www/tugether/src/components/Search/index.js":"24","/Users/mac/www/tugether/src/utils/timeHelper.js":"25","/Users/mac/www/tugether/src/pages/Search/index.js":"26","/Users/mac/www/tugether/src/apis/youtube.js":"27","/Users/mac/www/tugether/src/contexts/RoomContext.js":"28","/Users/mac/www/tugether/src/components/Playlists/index.js":"29","/Users/mac/www/tugether/src/components/PlayingList/index.js":"30","/Users/mac/www/tugether/src/components/Messages/index.js":"31","/Users/mac/www/tugether/src/components/Logs/index.js":"32","/Users/mac/www/tugether/src/components/Users/index.js":"33","/Users/mac/www/tugether/src/pages/Privacy/index.js":"34","/Users/mac/www/tugether/src/pages/Tos/index.js":"35"},{"size":886,"mtime":1606446119638,"results":"36","hashOfConfig":"37"},{"size":825,"mtime":1606731755085,"results":"38","hashOfConfig":"37"},{"size":592,"mtime":1606470595012,"results":"39","hashOfConfig":"37"},{"size":1960,"mtime":1617870077972,"results":"40","hashOfConfig":"37"},{"size":114,"mtime":1606446075081,"results":"41","hashOfConfig":"37"},{"size":257,"mtime":1606463164347,"results":"42","hashOfConfig":"43"},{"size":4870,"mtime":1617764175597,"results":"44","hashOfConfig":"37"},{"size":548,"mtime":1617864440481,"results":"45","hashOfConfig":"37"},{"size":5077,"mtime":1617767187454,"results":"46","hashOfConfig":"37"},{"size":110,"mtime":1606470299280,"results":"47","hashOfConfig":"37"},{"size":1522,"mtime":1617765677024,"results":"48","hashOfConfig":"37"},{"size":10486,"mtime":1617785597292,"results":"49","hashOfConfig":"37"},{"size":9984,"mtime":1617804990935,"results":"50","hashOfConfig":"37"},{"size":524,"mtime":1606703090389,"results":"51","hashOfConfig":"37"},{"size":403,"mtime":1599329902674,"results":"52","hashOfConfig":"37"},{"size":442,"mtime":1606703083412,"results":"53","hashOfConfig":"37"},{"size":445,"mtime":1606703093590,"results":"54","hashOfConfig":"37"},{"size":2370,"mtime":1606895393484,"results":"55","hashOfConfig":"37"},{"size":392,"mtime":1606718964035,"results":"56","hashOfConfig":"37"},{"size":128,"mtime":1606446385107,"results":"57","hashOfConfig":"37"},{"size":477,"mtime":1606718703278,"results":"58","hashOfConfig":"37"},{"size":591,"mtime":1606718745746,"results":"59","hashOfConfig":"37"},{"size":334,"mtime":1606893574017,"results":"60","hashOfConfig":"37"},{"size":7018,"mtime":1617784738327,"results":"61","hashOfConfig":"37"},{"size":352,"mtime":1606884250348,"results":"62","hashOfConfig":"37"},{"size":3518,"mtime":1617680993039,"results":"63","hashOfConfig":"37"},{"size":250,"mtime":1617863267382,"results":"64","hashOfConfig":"37"},{"size":2613,"mtime":1617763885607,"results":"65","hashOfConfig":"37"},{"size":11705,"mtime":1617871314463,"results":"66","hashOfConfig":"37"},{"size":1705,"mtime":1617805105822,"results":"67","hashOfConfig":"37"},{"size":2512,"mtime":1617804380197,"results":"68","hashOfConfig":"37"},{"size":1858,"mtime":1617805046531,"results":"69","hashOfConfig":"37"},{"size":1673,"mtime":1617705280492,"results":"70","hashOfConfig":"37"},{"size":3095,"mtime":1617870065506,"results":"71","hashOfConfig":"37"},{"size":1633,"mtime":1617870278795,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"hna9qx",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6pgspf",{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/www/tugether/src/configureStore.js",[],["155","156","157","158","159"],"/Users/mac/www/tugether/src/slices/session/index.js",[],"/Users/mac/www/tugether/src/index.js",[],"/Users/mac/www/tugether/src/App.js",["160","161","162"],"/Users/mac/www/tugether/src/utils/history.js",[],"/Users/mac/www/tugether/src/services/firebase.js",["163"],"/Users/mac/www/tugether/src/components/Header/index.js",["164","165"],"import Modal from 'components/Modal';\nimport RoomContext from 'contexts/RoomContext';\nimport { Formik } from 'formik';\nimport React, { useContext, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { updateDisplayName } from 'slices/session';\nimport SessionSelector from 'slices/session/selector';\nimport * as Yup from 'yup';\nimport firebase from 'firebase';\n\nconst UserSettingsFormSchema = Yup.object().shape({\n  displayName: Yup.string().required('Display name is required'),\n});\n\nconst Header = () => {\n  const [userModalVisible, setUserModalVisible] = useState(false);\n  const session = useSelector(SessionSelector.getSession);\n  const formikRef = useRef();\n  const dispatch = useDispatch();\n  const roomContext = useContext(RoomContext);\n\n  const toggleUserModal = () => {\n    setUserModalVisible((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <header id=\"header\">\n        <div className=\"w-full max-w-6xl mx-auto\">\n          <div className=\"px-4 flex flex-row items-center\">\n            <Link className=\"logo mr-4\" to=\"/\">\n              Tugether\n            </Link>\n            {roomContext.room && (\n              <span className=\"text-gray-600\">Room: {roomContext.room.name}</span>\n            )}\n            <div className=\"ml-auto\">\n              <button\n                type=\"button\"\n                onClick={toggleUserModal}\n                className=\"focus:outline-none flex flex-row space-x-2 items-center\"\n              >\n                <div className=\"h-4 w-4\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-settings\"\n                  >\n                    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\n                  </svg>\n                </div>\n                <span>Settings</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n      <Modal visible={userModalVisible} close={toggleUserModal}>\n        <Formik\n          validationSchema={UserSettingsFormSchema}\n          initialValues={{ displayName: session.displayName || '' }}\n          innerRef={formikRef}\n          onSubmit={(values) => {\n            if (roomContext.room) {\n              firebase\n                .database()\n                .ref(`/users/${roomContext.room.id}/${session.id}`)\n                .update({ name: values.displayName });\n              roomContext.writeLog(`renamed to ${values.displayName}`);\n            }\n            dispatch(updateDisplayName(values.displayName));\n            toggleUserModal();\n          }}\n        >\n          {({ handleChange, handleBlur, handleSubmit, touched, errors, values }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"font-bold mb-4 border-b pb-2 text-lg\">Update Settings</div>\n              <div className=\"mb-1 text-sm\">Display Name</div>\n              <div className=\"mb-4\">\n                <input\n                  className=\"px-3 py-2 focus:outline-none bg-gray-100 w-full\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  name=\"displayName\"\n                  autoComplete=\"off\"\n                  value={values.displayName}\n                />\n              </div>\n              <div className=\"flex justify-end space-x-2\">\n                <button\n                  type=\"button\"\n                  className=\"px-3 py-2 focus:outline-none border\"\n                  onClick={toggleUserModal}\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"px-3 py-2 focus:outline-none border\">\n                  Save\n                </button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\n\nexport default Header;\n","/Users/mac/www/tugether/src/components/Footer/index.js",[],"/Users/mac/www/tugether/src/pages/Home/index.js",["166"],"import { Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport firebase from 'firebase';\nimport Modal from 'components/Modal';\nimport * as Yup from 'yup';\n\nconst CreateRoomSchema = Yup.object().shape({\n  roomName: Yup.string()\n    .min(5, 'Room name must be longer than 5 characters')\n    .required('Room name is required'),\n  roomPassword: Yup.string(),\n});\n\nconst Home = () => {\n  const history = useHistory();\n  const [roomId, setRoomId] = useState('');\n  const [createRoomModalVisible, setCreateRoomModalVisible] = useState(false);\n\n  const toggleCreateRoomModal = () => {\n    setCreateRoomModalVisible((prevState) => !prevState);\n  };\n\n  const onSubmit = (values) => {\n    firebase\n      .database()\n      .ref(`/rooms/${values.roomId}`)\n      .once('value')\n      .then((snapshot) => {\n        if (snapshot.exists()) history.push(`/room/${values.roomId}`);\n        else {\n          setRoomId(values.roomId);\n          toggleCreateRoomModal();\n        }\n      });\n  };\n\n  const onCreateRoomSubmit = async (values) => {\n    await firebase\n      .database()\n      .ref(`/rooms/${roomId}`)\n      .set({\n        id: roomId,\n        name: values.roomName,\n        password: values.roomPassword,\n      })\n      .then(() => {\n        history.push(`/room/${roomId}`);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"h-96 flex flex-col items-center justify-center\">\n        <h1 className=\"leading-tight text-4xl font-bold mb-4\">Create or join a room</h1>\n        <p className=\"max-w-xl mb-5\">Watch Youtube video&apos;s together in realtime.</p>\n        <div>\n          <Formik\n            initialValues={{ roomId: '' }}\n            validate={(values) => {\n              const errors = {};\n              if (!values.roomId) {\n                errors.roomId = 'Required';\n              } else if (!/^[A-Z0-9.-]+$/i.test(values.roomId)) {\n                errors.roomId = 'Invalid room ID';\n              }\n              return errors;\n            }}\n            onSubmit={onSubmit}\n          >\n            {({ handleChange, handleBlur, handleSubmit, values }) => (\n              <form onSubmit={handleSubmit}>\n                <input\n                  className=\"px-4 py-3 focus:outline-none bg-white mr-3 w-64\"\n                  placeholder=\"Room ID\"\n                  value={values.roomId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  name=\"roomId\"\n                  autoComplete=\"off\"\n                />\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-3 focus:outline-none font-bold border bg-gray-200\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n      <Modal visible={createRoomModalVisible}>\n        <Formik\n          validationSchema={CreateRoomSchema}\n          initialValues={{ roomName: '', roomPassword: '' }}\n          onSubmit={onCreateRoomSubmit}\n        >\n          {({ handleChange, handleBlur, handleSubmit, touched, errors }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"font-bold mb-4 border-b pb-2 text-lg\">Create new room</div>\n              <div className=\"mb-1 text-sm\">Room ID</div>\n              <div className=\"mb-5\">\n                <input\n                  className=\"px-3 py-2 focus:outline-none bg-gray-100 w-full\"\n                  value={roomId}\n                  disabled\n                />\n              </div>\n              <div className=\"mb-1 text-sm\">Room Name</div>\n              <div className=\"mb-4\">\n                <input\n                  className=\"px-3 py-2 focus:outline-none bg-gray-100 w-full mb-1\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  name=\"roomName\"\n                  autoComplete=\"off\"\n                />\n                {errors.roomName && touched.roomName ? (\n                  <div className=\"text-sm text-red-400\">{errors.roomName}</div>\n                ) : null}\n              </div>\n              <div className=\"mb-1 text-sm\">Room Password</div>\n              <div className=\"mb-4\">\n                <input\n                  className=\"px-3 py-2 focus:outline-none bg-gray-100 w-full\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  name=\"roomPassword\"\n                  autoComplete=\"off\"\n                />\n              </div>\n              <div className=\"flex justify-end space-x-2\">\n                <button\n                  type=\"button\"\n                  className=\"px-3 py-2 focus:outline-none border\"\n                  onClick={toggleCreateRoomModal}\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"px-3 py-2 focus:outline-none border\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/mac/www/tugether/src/pages/PageNotFound/index.js",[],"/Users/mac/www/tugether/src/components/Modal/index.js",["167","168","169"],"import { Transition } from '@headlessui/react';\nimport React from 'react';\n\nconst Modal = ({ children, visible, close }) => (\n  <>\n    <Transition\n      show={visible}\n      unmount={false}\n      className=\"fixed z-50 inset-0 overflow-y-auto\"\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div className=\"flex justify-center items-center min-h-screen px-4\">\n        <Transition.Child\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n          unmount={false}\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n          onClick={close}\n        ></Transition.Child>\n        <Transition.Child\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n          leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          unmount={false}\n          className=\"sm:inline-block align-bottom bg-white text-left overflow-hidden shadow-xl transform transition-all max-w-lg w-full\"\n        >\n          <div className=\"bg-white p-4\">{children}</div>\n        </Transition.Child>\n      </div>\n    </Transition>\n  </>\n);\n\nexport default Modal;\n","/Users/mac/www/tugether/src/pages/Room/index.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React from 'react';\nimport firebase from 'firebase';\nimport Player from 'components/Player';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport SessionSelector from 'slices/session/selector';\nimport Playlists from 'components/Playlists';\nimport Search from 'components/Search';\nimport RoomContext from 'contexts/RoomContext';\nimport PlayingList from 'components/PlayingList';\nimport Messages from 'components/Messages';\nimport Logs from 'components/Logs';\nimport Users from 'components/Users';\n\nconst messageAudio = new Audio('/sounds/hiccup.mp3');\nconst daucatmoiAudio = new Audio('/sounds/daucatmoi.mp3');\nconst danhchetchamaygioAudio = new Audio('/sounds/danhchetchamaygio.mp3');\nconst oidoioiAudio = new Audio('/sounds/oidoioi.mp3');\nconst oibanoiAudio = new Audio('/sounds/oibanoi.mp3');\n\nclass Room extends React.Component {\n  constructor(props) {\n    super(props);\n    const { match } = this.props;\n    this.roomId = match.params.roomId;\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      isExist: false,\n      isMessagePanelVisible: false,\n      isPlayingListPanelVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    const { history, session } = this.props;\n    const { setRoom } = this.context;\n\n    firebase\n      .database()\n      .ref(`/users/${this.roomId}/${session.id}`)\n      .once('value')\n      .then((snapshot) => {\n        if (snapshot.exists()) this.setState({ isExist: true });\n      });\n\n    firebase\n      .database()\n      .ref(`/rooms/${this.roomId}`)\n      .once('value')\n      .then((snapshot) => {\n        if (!snapshot.exists()) history.push('/404');\n        else {\n          const room = snapshot.val();\n          setRoom(room);\n          this.setState({ isLoading: false }, () => {\n            const { isExist, isAuthenticated } = this.state;\n            if (!isExist) {\n              if (!(!isAuthenticated && room.password.length > 0)) this.initRoom();\n            }\n          });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    const { session } = this.props;\n    const { writeLog, reset } = this.context;\n    const displayName = session.displayName || 'Anonymous';\n    if (this.firebaseUserRef !== undefined) this.firebaseUserRef.remove();\n    if (this.firebaseLogRef !== undefined) {\n      this.firebaseLogRef.set({\n        message: `${displayName} disconnected`,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      });\n      this.firebaseLogRef.off();\n    }\n    if (this.usersRef !== undefined) this.usersRef.off();\n    if (this.logsRef !== undefined) this.logsRef.off();\n    if (this.messagesRef !== undefined) this.messagesRef.off();\n    if (this.playlistsRef !== undefined) this.playlistsRef.off();\n    reset();\n  }\n\n  initRoom = () => {\n    const { session } = this.props;\n    const { writeLog, setPlaylists, setMessages, setLogs, setUsers } = this.context;\n    const displayName = session.displayName || 'Anonymous';\n    const connectedRef = firebase.database().ref('.info/connected');\n    connectedRef.on('value', (snapshot) => {\n      if (snapshot.val() === true) {\n        this.firebaseUserRef = firebase.database().ref(`/users/${this.roomId}/${session.id}`);\n        this.firebaseUserRef.set({ id: session.id, name: session.displayName || null });\n        this.firebaseUserRef.onDisconnect().remove();\n\n        writeLog(`joined the room`);\n\n        this.firebaseLogRef = firebase.database().ref(`/logs/${this.roomId}`).push();\n        this.firebaseLogRef.onDisconnect().set({\n          message: `${displayName} disconnected`,\n          timestamp: firebase.database.ServerValue.TIMESTAMP,\n        });\n      }\n    });\n\n    this.usersRef = firebase.database().ref(`/users/${this.roomId}`);\n    this.usersRef.on('value', (snapshot) => {\n      const users = snapshot.val();\n      setUsers(users ? Object.values(users) : []);\n    });\n\n    this.playlistsRef = firebase.database().ref(`/playlists/${this.roomId}`);\n    this.playlistsRef.on('value', (snapshot) => {\n      const playlists = snapshot.val();\n      setPlaylists(playlists ? Object.values(playlists) : []);\n    });\n\n    this.messagesRef = firebase.database().ref(`/messages/${this.roomId}`);\n    this.messagesRef\n      .orderByChild('timestamp')\n      .startAt(Date.now() - 600000)\n      .on('child_added', (snapshot) => {\n        const { messages } = this.context;\n        const message = snapshot.val();\n        setMessages([\n          {\n            key: snapshot.key,\n            ...message,\n          },\n          ...messages,\n        ]);\n        if (message.timestamp > Date.now() - 5000) {\n          if (message.message === 'daucatmoi') daucatmoiAudio.play();\n          else if (message.message === 'oibanoi') oibanoiAudio.play();\n          else if (message.message === 'oidoioi') oidoioiAudio.play();\n          else if (message.message === 'danhchetchamaygio') danhchetchamaygioAudio.play();\n          else if (message.userId !== session.id) messageAudio.play();\n        }\n      });\n\n    this.logsRef = firebase.database().ref(`/logs/${this.roomId}`);\n    this.logsRef\n      .orderByChild('timestamp')\n      .startAt(Date.now())\n      .on('child_added', (snapshot) => {\n        const { logs } = this.context;\n        setLogs([snapshot.val(), ...logs]);\n      });\n  };\n\n  render() {\n    const { playlists, room } = this.context;\n    const {\n      isLoading,\n      isAuthenticated,\n      isExist,\n      isMessagePanelVisible,\n      isPlayingListPanelVisible,\n    } = this.state;\n\n    if (isLoading)\n      return (\n        <div className=\"h-96 flex justify-center items-center\">\n          <div className=\"animate-bounce h-16\">Loading ...</div>\n        </div>\n      );\n\n    if (isExist)\n      return (\n        <div className=\"h-96 flex justify-center items-center\">\n          <h1 className=\"leading-tight text-4xl font-bold\">You are already joined this room</h1>\n        </div>\n      );\n\n    if (!isLoading && room.password.length > 0 && !isAuthenticated)\n      return (\n        <div className=\"h-96 flex flex-col justify-center items-center\">\n          <h1 className=\"leading-tight text-4xl font-bold mb-4\">This room is private</h1>\n          <p className=\"max-w-xl mb-5\">Enter room password to enter</p>\n          <Formik\n            initialValues={{ roomPassword: '' }}\n            validate={(values) => {\n              const errors = {};\n              if (values.roomPassword !== room.password) {\n                errors.roomPassword = 'Invalid password';\n              }\n              return errors;\n            }}\n            onSubmit={() => {\n              this.setState({ isAuthenticated: true });\n              this.initRoom();\n            }}\n          >\n            {({ handleChange, handleBlur, handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <input\n                  type=\"password\"\n                  className=\"px-4 py-3 focus:outline-none bg-white mr-3 w-64\"\n                  placeholder=\"Room Password\"\n                  name=\"roomPassword\"\n                  autoComplete=\"off\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-3 focus:outline-none font-bold border bg-gray-200\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n          </Formik>\n        </div>\n      );\n\n    if (room)\n      return (\n        <>\n          <div className=\"fixed bottom-10 right-10 space-x-4 flex flex-row z-30\">\n            <div className={`relative toggle-panel ${isMessagePanelVisible ? 'active' : null}`}>\n              <Messages />\n              <button\n                type=\"button\"\n                className=\"rounded-full w-12 h-12 p-3 shadow-md\"\n                onClick={() => {\n                  this.setState({\n                    isMessagePanelVisible: !isMessagePanelVisible,\n                    isPlayingListPanelVisible: false,\n                  });\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-message-circle\"\n                >\n                  <path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>\n                </svg>\n              </button>\n            </div>\n            <div className={`relative toggle-panel ${isPlayingListPanelVisible ? 'active' : null}`}>\n              <PlayingList />\n              <button\n                type=\"button\"\n                className=\"rounded-full w-12 h-12 p-3 shadow-md\"\n                onClick={() => {\n                  this.setState({\n                    isPlayingListPanelVisible: !isPlayingListPanelVisible,\n                    isMessagePanelVisible: false,\n                  });\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-play-circle\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <polygon points=\"10 8 16 12 10 16 10 8\"></polygon>\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"p-4 bg-white grid grid-cols-6 gap-6\">\n            <div className=\"col-span-6 md:col-span-4\">\n              <Search room={room} playlists={playlists} />\n              <div className=\"mb-6\">\n                <Player />\n              </div>\n              <div className=\"mb-6\">\n                <Playlists />\n              </div>\n            </div>\n            <div className=\"col-span-6 md:col-span-2\">\n              <Users />\n              <Logs />\n            </div>\n          </div>\n        </>\n      );\n\n    return null;\n  }\n}\n\nRoom.contextType = RoomContext;\n\nconst mapStateToProps = (state) => ({\n  session: SessionSelector.getSession(state),\n});\n\nexport default connect(mapStateToProps)(Room);\n","/Users/mac/www/tugether/src/components/Player/index.js",["186","187","188","189","190","191","192","193","194","195"],"/* eslint-disable react/sort-comp */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport Slider from 'components/Slider';\nimport firebase from 'firebase';\nimport timeHelper from 'utils/timeHelper';\nimport { debounce, findIndex, isEmpty, unescape } from 'lodash';\nimport SessionSelector from 'slices/session/selector';\nimport { connect } from 'react-redux';\nimport screenfull from 'screenfull';\nimport { findDOMNode } from 'react-dom';\nimport RoomContext from 'contexts/RoomContext';\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      duration: 0,\n      volume: 0.8,\n      muted: false,\n    };\n    this.playerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { session } = this.props;\n    const { room, setPlayer } = this.context;\n    this.firebaseRef = firebase.database().ref(`/players/${room.id}`);\n    this.firebaseRef.on('value', (snapshot) => {\n      if (!snapshot.exists()) {\n        // no player\n        setPlayer(null);\n      } else {\n        const player = snapshot.val();\n        if (isEmpty(player.hostId)) {\n          this.firebaseRef.update({ hostId: session.id }, (error) => {});\n          this.firebaseRef.onDisconnect().update({ hostId: null }, (error) => {});\n        }\n        if (\n          this.playerRef.current !== null &&\n          Math.abs(this.playerRef.current.getCurrentTime() - player.played) > 1\n        )\n          this.playerRef.current.seekTo(player.played, 'seconds');\n        setPlayer(player);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    const { session } = this.props;\n    const { player } = this.context;\n    if (player && player.hostId === session.id) this.firebaseRef.update({ hostId: null });\n    this.firebaseRef.off();\n  }\n\n  onVolumeChange = (value) => {\n    this.setState({ volume: value / 100 });\n  };\n\n  onDuration = (value) => {\n    this.setState({ duration: value });\n  };\n\n  onProgress = (state) => {\n    const { session } = this.props;\n    const { player } = this.context;\n    if (player.hostId === session.id) {\n      this.firebaseRef.update({ played: state.playedSeconds });\n    }\n  };\n\n  onProgressChange = (value) => {\n    const { duration } = this.state;\n    this.firebaseRef.update({\n      played: (value / 100) * duration,\n    });\n  };\n\n  onProgressChangeDebounced = debounce(this.onProgressChange, 100);\n\n  onEnded = () => {\n    const { session } = this.props;\n    const { player, playVideo } = this.context;\n    const { playlist } = player;\n    if (player.hostId === session.id) {\n      if (player.loop) {\n        this.firebaseRef.update({ playing: true });\n      } else {\n        // Next\n        const index = findIndex(playlist, { id: player.videoId });\n        let nextIndex = index + 1;\n        if (index < 0 || index === playlist.length - 1) nextIndex = 0;\n        const video = playlist[nextIndex];\n        playVideo(video);\n      }\n    }\n  };\n\n  onPrev = () => {\n    const { player, playVideo } = this.context;\n    const { playlist } = player;\n\n    const index = findIndex(playlist, { id: player.videoId });\n    let prevIndex = index - 1;\n    if (index === 0 || index < 0) prevIndex = playlist.length - 1;\n    const video = playlist[prevIndex];\n    playVideo(video);\n  };\n\n  onNext = () => {\n    const { player, playVideo } = this.context;\n    const { playlist } = player;\n\n    const index = findIndex(playlist, { id: player.videoId });\n    let nextIndex = index + 1;\n    if (index < 0 || index === playlist.length - 1) nextIndex = 0;\n    const video = playlist[nextIndex];\n    playVideo(video);\n  };\n\n  onFullscreen = () => {\n    // eslint-disable-next-line react/no-find-dom-node\n    screenfull.request(findDOMNode(this.playerRef.current));\n  };\n\n  togglePlay = () => {\n    const { player } = this.context;\n    this.firebaseRef.update({ playing: !player.playing }, (error) => {\n      // Log here\n      const { writeLog } = this.context;\n      if (!error) writeLog(`${player.playing ? 'pause' : 'play'} the video`);\n    });\n  };\n\n  toggleMuted = () => {\n    const { muted } = this.state;\n    this.setState({ muted: !muted });\n  };\n\n  render() {\n    const { volume, muted, duration } = this.state;\n    const { player } = this.context;\n    if (!player) return null;\n\n    return (\n      <div className=\"bg-white\">\n        <div className=\"font-bold mb-2\">{unescape(player.title)}</div>\n        <ReactPlayer\n          ref={this.playerRef}\n          url={`https://www.youtube.com/watch?v=${player.videoId}`}\n          playing={player.playing}\n          onReady={() => {\n            this.playerRef.current.seekTo(player.played, 'seconds');\n          }}\n          onDuration={this.onDuration}\n          onProgress={this.onProgress}\n          onEnded={this.onEnded}\n          volume={volume}\n          muted={muted}\n          width=\"100%\"\n          height={360}\n          config={{ youtube: { playerVars: { autoplay: 1, disablekb: 1 } } }}\n          style={{ pointerEvents: 'none' }}\n          pip\n        />\n        <div className=\"p-4 flex flex-row items-center space-x-4\">\n          <button type=\"button\" className=\"w-6 h-6\" onClick={this.onPrev}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-skip-back\"\n            >\n              <polygon points=\"19 20 9 12 19 4 19 20\"></polygon>\n              <line x1=\"5\" y1=\"19\" x2=\"5\" y2=\"5\"></line>\n            </svg>\n          </button>\n          <button type=\"button\" className=\"w-6 h-6 focus:outline-none\" onClick={this.togglePlay}>\n            {player.playing ? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-pause\"\n              >\n                <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"></rect>\n                <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"></rect>\n              </svg>\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-play\"\n              >\n                <polygon points=\"5 3 19 12 5 21 5 3\"></polygon>\n              </svg>\n            )}\n          </button>\n          <button type=\"button\" className=\"w-6 h-6\" onClick={this.onNext}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-skip-forward\"\n            >\n              <polygon points=\"5 4 15 12 5 20 5 4\"></polygon>\n              <line x1=\"19\" y1=\"5\" x2=\"19\" y2=\"19\"></line>\n            </svg>\n          </button>\n          <div>{timeHelper.secondsToHms(player.played)}</div>\n          <div className=\"flex-grow\">\n            <Slider\n              value={duration === 0 ? 0 : (player.played / duration) * 100}\n              onChange={this.onProgressChangeDebounced}\n            />\n          </div>\n          <div>{duration === 0 ? '0:00' : timeHelper.secondsToHms(duration - player.played)}</div>\n          <button type=\"button\" className=\"w-6 h-6 focus:outline-none\" onClick={this.toggleMuted}>\n            {muted ? (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-volume-x\"\n              >\n                <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\n                <line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\"></line>\n                <line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\"></line>\n              </svg>\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-volume-2\"\n              >\n                <polygon points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"></polygon>\n                <path d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"></path>\n              </svg>\n            )}\n          </button>\n          <div className=\"w-20\">\n            <Slider value={volume * 100} onChange={this.onVolumeChange} />\n          </div>\n          <button type=\"button\" className=\"w-6 h-6 focus:outline-none\" onClick={this.onFullscreen}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-maximize\"\n            >\n              <path d=\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nPlayer.contextType = RoomContext;\n\nconst mapStateToProps = (state) => ({\n  session: SessionSelector.getSession(state),\n});\n\nexport default connect(mapStateToProps)(Player);\n","/Users/mac/www/tugether/src/assets/icons/Play.js",[],["196","197","198","199","200"],"/Users/mac/www/tugether/src/firebase/config.js",[],"/Users/mac/www/tugether/src/assets/icons/Rewind.js",[],"/Users/mac/www/tugether/src/assets/icons/FastForward.js",[],"/Users/mac/www/tugether/src/components/Slider/index.js",["201","202","203","204","205"],"/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/no-unused-state */\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: false,\n      // value: props.value\n    };\n    this.barRef = React.createRef();\n  }\n\n  onBarMouseDown = (event) => {\n    const value = (\n      ((event.clientX - this.barRef.current.offsetLeft) / this.barRef.current.offsetWidth) *\n      100\n    ).toFixed(2);\n    // this.setState({ value });\n    const { onChange } = this.props;\n    if (typeof onChange === 'function') onChange(value);\n  };\n\n  onHandleMouseDown = (event) => {\n    event.stopPropagation();\n    this.setState({ isDragging: true });\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (event) => {\n    this.setState({ isDragging: false });\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (event) => {\n    event.preventDefault();\n    let value = (\n      ((event.clientX - this.barRef.current.offsetLeft) / this.barRef.current.offsetWidth) *\n      100\n    ).toFixed(2);\n    value = Math.min(100, Math.max(0, value));\n    // this.setState({ value });\n    const { onChange } = this.props;\n    if (typeof onChange === 'function') onChange(value);\n  };\n\n  render() {\n    const { isDragging } = this.state;\n    const { value } = this.props;\n    return (\n      <div\n        ref={this.barRef}\n        className=\"bg-gray-100 h-1 rounded-full w-full relative cursor-pointer\"\n        onMouseDown={this.onBarMouseDown}\n      >\n        <div\n          className=\"h-1 rounded-full bg-gray-400 cursor-pointer\"\n          style={{ width: `${value}%` }}\n        ></div>\n        <div\n          className=\"absolute h-4\"\n          style={{ top: '50%', left: `${value}%` }}\n          onMouseDown={this.onHandleMouseDown}\n        >\n          <div\n            className=\"h-4 w-4 rounded-full bg-gray-400 absolute -ml-2 border-2 border-white\"\n            style={{ top: '-50%' }}\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/Users/mac/www/tugether/src/assets/icons/ArrowsExpand.js",[],"/Users/mac/www/tugether/src/slices/session/selector.js",[],"/Users/mac/www/tugether/src/assets/icons/VolumeUp.js",[],"/Users/mac/www/tugether/src/assets/icons/VolumeOff.js",[],"/Users/mac/www/tugether/src/assets/icons/Pause.js",[],"/Users/mac/www/tugether/src/components/Search/index.js",["206","207","208","209"],"import youtube, { API_KEY } from 'apis/youtube';\nimport { debounce, unescape } from 'lodash';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase';\nimport Modal from 'components/Modal';\nimport RoomContext from 'contexts/RoomContext';\n\nconst Search = ({ playlists, room }) => {\n  const [term, setTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isPlaylistsModalVisible, setIsPlaylistsModalVisible] = useState(false);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [debouncedTerm, setDebouncedTerm] = useState(term);\n\n  const debounceSetTerm = useCallback(debounce(setDebouncedTerm, 500), []);\n  const wrapperRef = useRef(null);\n  const roomContext = useContext(RoomContext);\n\n  const handleSearch = async () => {\n    if (debouncedTerm) {\n      setIsLoading(true);\n      const response = await youtube.get('/search', {\n        params: {\n          q: debouncedTerm,\n          part: 'snippet',\n          type: 'video',\n          key: API_KEY,\n        },\n      });\n      // const response = await axios.get(\n      //   'https://gist.githubusercontent.com/sonnm/c8027497d5e4237fc0a4195ce4c28550/raw/6f968327529556e558fb51b9d07553f6a77b9951/response.json'\n      // );\n      setResults(response.data.items);\n      setIsLoading(false);\n    } else {\n      setResults([]);\n    }\n  };\n\n  const handleTermChange = (event) => {\n    setTerm(event.target.value);\n    debounceSetTerm(event.target.value);\n  };\n\n  const handlePlay = async (video) => {\n    roomContext.playVideo(video);\n    setIsFocused(false);\n    setResults([]);\n    setTerm('');\n  };\n\n  const onAddToPlaylist = (item) => {\n    setSelectedVideo(item);\n    setIsPlaylistsModalVisible(true);\n  };\n\n  const handleAddToPlaylist = (playlistId) => {\n    firebase\n      .database()\n      .ref(`/playlists/${room.id}/${playlistId}/videos/${selectedVideo.id.videoId}`)\n      .set({\n        id: selectedVideo.id.videoId,\n        title: selectedVideo.snippet.title,\n        channelTitle: selectedVideo.snippet.channelTitle,\n        url: `https://www.youtube.com/watch?v=${selectedVideo.id.videoId}`,\n        thumbnail: selectedVideo.snippet.thumbnails.medium.url,\n      });\n\n    setIsPlaylistsModalVisible(false);\n  };\n\n  useEffect(() => {\n    handleSearch();\n  }, [debouncedTerm]);\n\n  useEffect(() => {\n    const handleClick = (event) => {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        // setIsFocused(false);\n        // setTerm('');\n        // setResults([]);\n      }\n    };\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [wrapperRef]);\n\n  return (\n    <>\n      <Modal\n        visible={isPlaylistsModalVisible}\n        close={() => {\n          setIsPlaylistsModalVisible(false);\n        }}\n      >\n        <div className=\"font-bold mb-2 border-b pb-2 text-lg\">Add to playlist</div>\n        <div className=\"divide-y divide-gray-100\">\n          {playlists.map((playlist) => (\n            <div\n              key={playlist.id}\n              className=\"py-2 flex flex-row w-full focus:outline-none items-center\"\n            >\n              <div className=\"w-12 h-12 bg-gray-100 mr-2\">\n                {playlist?.videos && (\n                  <div\n                    className=\"w-12 h-12 bg-center bg-no-repeat bg-cover\"\n                    style={{\n                      backgroundImage: `url(${Object.values(playlist?.videos)[0].thumbnail})`,\n                    }}\n                  ></div>\n                )}\n              </div>\n              <div>\n                <div className=\"font-semibold\">{playlist.name}</div>\n                <div className=\"text-gray-600 text-xs\">\n                  {Object.values(playlist?.videos || {}).length || 0} videos\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                className=\"focus:outline-none ml-auto border px-3 py-1\"\n                onClick={() => {\n                  handleAddToPlaylist(playlist.id);\n                }}\n              >\n                Add to playlist\n              </button>\n            </div>\n          ))}\n        </div>\n      </Modal>\n      <div className=\"search-video relative\" ref={wrapperRef}>\n        <div className=\"mb-6 relative\">\n          <input\n            className=\"focus:outline-none px-3 py-2 w-full bg-gray-100\"\n            placeholder=\"Video Search...\"\n            value={term}\n            onChange={handleTermChange}\n            onClick={() => setIsFocused(true)}\n          />\n          {isFocused && term !== '' && (\n            <button\n              type=\"button\"\n              className=\"absolute top-2 right-2\"\n              onClick={() => {\n                setTerm('');\n                setIsFocused(false);\n                setResults([]);\n              }}\n            >\n              Close\n            </button>\n          )}\n        </div>\n        {isFocused && (isLoading || results.length > 0) && (\n          <div className=\"search-results-wrapper z-30 shadow-lg bg-gray-700\">\n            <div className=\"search-results\">\n              {isLoading && (\n                <div className=\"absolute top-0 left-0 bottom-0 right-0 bg-white opacity-60 flex items-center justify-center\">\n                  <div>Loading...</div>\n                </div>\n              )}\n              {results.map((item) => (\n                <div key={item.id.videoId} className=\"flex flex-row mb-4\">\n                  <div style={{ width: '180px', minWidth: '180px' }} className=\"mr-4\">\n                    <img src={item.snippet.thumbnails.medium.url} alt=\"\" />\n                  </div>\n                  <div>\n                    <div className=\"font-bold mb-1\">{unescape(item.snippet.title)}</div>\n                    <div className=\"text-sm mb-2 text-gray-500\">{item.snippet.channelTitle}</div>\n                    <div className=\"space-x-2\">\n                      <button\n                        type=\"button\"\n                        className=\"focus:outline-none px-2 py-1 border text-sm\"\n                        onClick={() => {\n                          handlePlay({ id: item.id.videoId, title: item.snippet.title });\n                        }}\n                      >\n                        Play now\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"focus:outline-none px-2 py-1 border text-sm\"\n                        onClick={() => {\n                          onAddToPlaylist(item);\n                        }}\n                      >\n                        Add to Playlist\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n","/Users/mac/www/tugether/src/utils/timeHelper.js",[],"/Users/mac/www/tugether/src/pages/Search/index.js",["210","211","212"],"import youtube, { API_KEY } from 'apis/youtube';\nimport axios from 'axios';\nimport { debounce, unescape } from 'lodash';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport firebase from 'firebase';\n\nconst Search = () => {\n  const [term, setTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [debouncedTerm, setDebouncedTerm] = useState(term);\n  const debounceSetTerm = useCallback(debounce(setDebouncedTerm, 500), []);\n  const wrapperRef = useRef(null);\n\n  const handleSearch = async () => {\n    if (debouncedTerm) {\n      setIsLoading(true);\n      // const response = await youtube.get('/search', {\n      //   params: {\n      //     q: debouncedTerm,\n      //     part: 'snippet',\n      //     type: 'video',\n      //     key: API_KEY,\n      //   },\n      // });\n      const response = await axios.get(\n        'https://gist.githubusercontent.com/sonnm/c8027497d5e4237fc0a4195ce4c28550/raw/6f968327529556e558fb51b9d07553f6a77b9951/response.json'\n      );\n      setResults(response.data.items);\n      setIsLoading(false);\n    } else {\n      setResults([]);\n    }\n  };\n\n  const handleTermChange = (event) => {\n    setTerm(event.target.value);\n    debounceSetTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    handleSearch();\n  }, [debouncedTerm]);\n\n  useEffect(() => {\n    const handleClick = (event) => {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setIsFocused(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [wrapperRef]);\n\n  return (\n    <div className=\"search-video relative\" ref={wrapperRef}>\n      <div className=\"mb-6\">\n        <input\n          className=\"focus:outline-none px-3 py-2 w-full\"\n          placeholder=\"Video Search...\"\n          value={term}\n          onChange={handleTermChange}\n          onClick={() => setIsFocused(true)}\n        />\n      </div>\n      {isFocused && (isLoading || results.length > 0) && (\n        <div className=\"search-results-wrapper\">\n          <div className=\"search-results\">\n            {isLoading && (\n              <div className=\"absolute top-0 left-0 bottom-0 right-0 bg-white opacity-60 flex items-center justify-center\">\n                <div>Loading...</div>\n              </div>\n            )}\n            {results.map((item) => (\n              <div key={item.id.videoId} className=\"flex flex-row mb-4\">\n                <div style={{ width: '180px', minWidth: '180px' }} className=\"mr-4\">\n                  <img src={item.snippet.thumbnails.medium.url} alt=\"\" />\n                </div>\n                <div>\n                  <div className=\"font-bold mb-1\">{unescape(item.snippet.title)}</div>\n                  <div className=\"text-sm mb-2 text-gray-500\">{item.snippet.channelTitle}</div>\n                  <div className=\"space-x-2\">\n                    <button type=\"button\" className=\"focus:outline-none px-2 py-1 border text-sm\">\n                      Play now\n                    </button>\n                    <button type=\"button\" className=\"focus:outline-none px-2 py-1 border text-sm\">\n                      Add to Playlist\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/mac/www/tugether/src/apis/youtube.js",[],"/Users/mac/www/tugether/src/contexts/RoomContext.js",["213","214","215"],"import React from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport SessionSelector from 'slices/session/selector';\n\nconst RoomContext = React.createContext();\n\nclass Provider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: null,\n      player: null,\n      playlists: [],\n      messages: [],\n      users: [],\n      logs: [],\n    };\n  }\n\n  setRoom = (value) => {\n    this.setState({ room: value });\n  };\n\n  setPlayer = (value) => {\n    this.setState({ player: value });\n  };\n\n  setPlaylists = (value) => {\n    this.setState({ playlists: value });\n  };\n\n  setMessages = (value) => {\n    this.setState({ messages: value });\n  };\n\n  setUsers = (value) => {\n    this.setState({ users: value });\n  };\n\n  setLogs = (value) => {\n    this.setState({ logs: value });\n  };\n\n  writeLog = (message) => {\n    const { room } = this.state;\n    const { session } = this.props;\n    const displayName = session.displayName || 'Anonymous';\n    firebase\n      .database()\n      .ref(`/logs/${room.id}`)\n      .push()\n      .set({\n        message: `${displayName} ${message}`,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      });\n  };\n\n  playVideo = async (video, log = true) => {\n    const { room } = this.state;\n    await firebase\n      .database()\n      .ref()\n      .update(\n        {\n          [`/players/${room.id}/videoId`]: video.id,\n          [`/players/${room.id}/title`]: video.title,\n          [`/players/${room.id}/played`]: 0,\n          [`/players/${room.id}/playing`]: true,\n        },\n        (error) => {\n          if (!error && log) {\n            this.writeLog(`play ${video.title}`);\n          }\n        }\n      );\n  };\n\n  reset = () => {\n    this.setState({\n      room: null,\n      player: null,\n      playlists: [],\n      messages: [],\n      users: [],\n      logs: [],\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    return (\n      <RoomContext.Provider\n        value={{\n          ...this.state,\n          setRoom: this.setRoom,\n          setPlayer: this.setPlayer,\n          setPlaylists: this.setPlaylists,\n          setMessages: this.setMessages,\n          setUsers: this.setUsers,\n          setLogs: this.setLogs,\n          writeLog: this.writeLog,\n          playVideo: this.playVideo,\n          reset: this.reset,\n        }}\n      >\n        {children}\n      </RoomContext.Provider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  session: SessionSelector.getSession(state),\n});\n\nexport const RoomContextProvider = connect(mapStateToProps)(Provider);\n\nexport default RoomContext;\n","/Users/mac/www/tugether/src/components/Playlists/index.js",[],"/Users/mac/www/tugether/src/components/PlayingList/index.js",[],"/Users/mac/www/tugether/src/components/Messages/index.js",["216","217","218","219","220"],"import React from 'react';\nimport RoomContext from 'contexts/RoomContext';\nimport firebase from 'firebase';\nimport { isEmpty } from 'lodash';\nimport SessionSelector from 'slices/session/selector';\nimport { connect } from 'react-redux';\nimport dayjs from 'dayjs';\n\nclass Messages extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { input: '' };\n  }\n\n  handleSendMessage = (e) => {\n    e.preventDefault();\n    const { session } = this.props;\n    const { input } = this.state;\n    const { room } = this.context;\n    const message = input.trim();\n    const displayName = session.displayName || 'Anonymous';\n    if (!isEmpty(message)) {\n      firebase.database().ref(`/messages/${room.id}`).push().set({\n        user: displayName,\n        userId: session.id,\n        message: input,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      });\n      this.setState({ input: '' });\n    }\n  };\n\n  render() {\n    const { messages } = this.context;\n    const { input } = this.state;\n    const { session } = this.props;\n    return (\n      <>\n        <div className=\"bg-white absolute bottom-full right-0 p-4 w-80 mb-4 h-96 flex-col z-40 panel\">\n          <div className=\"messages\">\n            {messages.map((item, index) => (\n              <div\n                key={item.key}\n                className={`message ${session.id === item.userId ? 'self' : null}`}\n              >\n                {item.userId !== messages?.[index + 1]?.userId && (\n                  <div className=\"meta\">\n                    <span className=\"author\">{item.user}</span>\n                    <span className=\"time\">{dayjs(item.timestamp).format('HH:mm')}</span>\n                  </div>\n                )}\n                <div className=\"content-wrapper\">\n                  <div className=\"content\">{item.message}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n          <form onSubmit={this.handleSendMessage}>\n            <input\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              onChange={(e) => {\n                this.setState({ input: e.target.value });\n              }}\n              value={input}\n              className=\"px-3 py-2 focus:outline-none bg-gray-100 w-full\"\n            />\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nMessages.contextType = RoomContext;\n\nconst mapStateToProps = (state) => ({\n  session: SessionSelector.getSession(state),\n});\n\nexport default connect(mapStateToProps)(Messages);\n","/Users/mac/www/tugether/src/components/Logs/index.js",[],"/Users/mac/www/tugether/src/components/Users/index.js",[],"/Users/mac/www/tugether/src/pages/Privacy/index.js",[],"/Users/mac/www/tugether/src/pages/Tos/index.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":25,"column":13,"nodeType":"233","endLine":25,"endColumn":20},{"ruleId":"231","severity":1,"message":"234","line":25,"column":22,"nodeType":"233","endLine":25,"endColumn":30},{"ruleId":"231","severity":1,"message":"235","line":26,"column":18,"nodeType":"236","endLine":26,"endColumn":20},{"ruleId":"237","severity":1,"message":"238","line":9,"column":5,"nodeType":"239","messageId":"240","endLine":9,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":82,"column":55,"nodeType":"236","messageId":"243","endLine":82,"endColumn":62},{"ruleId":"241","severity":1,"message":"244","line":82,"column":64,"nodeType":"236","messageId":"243","endLine":82,"endColumn":70},{"ruleId":"241","severity":1,"message":"245","line":2,"column":17,"nodeType":"236","messageId":"243","endLine":2,"endColumn":26},{"ruleId":"231","severity":1,"message":"246","line":4,"column":18,"nodeType":"233","endLine":4,"endColumn":26},{"ruleId":"231","severity":1,"message":"247","line":4,"column":28,"nodeType":"233","endLine":4,"endColumn":35},{"ruleId":"231","severity":1,"message":"248","line":4,"column":37,"nodeType":"233","endLine":4,"endColumn":42},{"ruleId":"231","severity":1,"message":"249","line":24,"column":13,"nodeType":"233","endLine":24,"endColumn":18},{"ruleId":"231","severity":1,"message":"250","line":25,"column":25,"nodeType":"236","endLine":25,"endColumn":31},{"ruleId":"231","severity":1,"message":"251","line":25,"column":32,"nodeType":"236","endLine":25,"endColumn":38},{"ruleId":"231","severity":1,"message":"252","line":36,"column":13,"nodeType":"233","endLine":36,"endColumn":20},{"ruleId":"231","severity":1,"message":"232","line":36,"column":22,"nodeType":"233","endLine":36,"endColumn":29},{"ruleId":"231","severity":1,"message":"235","line":41,"column":45,"nodeType":"236","endLine":41,"endColumn":47},{"ruleId":"231","severity":1,"message":"253","line":52,"column":41,"nodeType":"236","endLine":52,"endColumn":45},{"ruleId":"231","severity":1,"message":"232","line":67,"column":13,"nodeType":"233","endLine":67,"endColumn":20},{"ruleId":"241","severity":1,"message":"254","line":68,"column":13,"nodeType":"236","messageId":"243","endLine":68,"endColumn":21},{"ruleId":"231","severity":1,"message":"255","line":69,"column":33,"nodeType":"236","endLine":69,"endColumn":44},{"ruleId":"231","severity":1,"message":"232","line":86,"column":13,"nodeType":"233","endLine":86,"endColumn":20},{"ruleId":"231","severity":1,"message":"255","line":88,"column":33,"nodeType":"236","endLine":88,"endColumn":44},{"ruleId":"231","severity":1,"message":"235","line":92,"column":89,"nodeType":"236","endLine":92,"endColumn":91},{"ruleId":"231","severity":1,"message":"235","line":93,"column":48,"nodeType":"236","endLine":93,"endColumn":50},{"ruleId":"231","severity":1,"message":"255","line":93,"column":66,"nodeType":"236","endLine":93,"endColumn":77},{"ruleId":"231","severity":1,"message":"235","line":137,"column":47,"nodeType":"236","endLine":137,"endColumn":49},{"ruleId":"231","severity":1,"message":"232","line":28,"column":13,"nodeType":"233","endLine":28,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":38,"column":53,"nodeType":"236","endLine":38,"endColumn":55},{"ruleId":"241","severity":1,"message":"256","line":38,"column":60,"nodeType":"236","messageId":"243","endLine":38,"endColumn":65},{"ruleId":"241","severity":1,"message":"256","line":39,"column":69,"nodeType":"236","messageId":"243","endLine":39,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":52,"column":13,"nodeType":"233","endLine":52,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":54,"column":45,"nodeType":"236","endLine":54,"endColumn":47},{"ruleId":"231","severity":1,"message":"232","line":67,"column":13,"nodeType":"233","endLine":67,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":69,"column":35,"nodeType":"236","endLine":69,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":84,"column":13,"nodeType":"233","endLine":84,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":87,"column":35,"nodeType":"236","endLine":87,"endColumn":37},{"ruleId":"221","replacedBy":"257"},{"ruleId":"223","replacedBy":"258"},{"ruleId":"225","replacedBy":"259"},{"ruleId":"227","replacedBy":"260"},{"ruleId":"229","replacedBy":"261"},{"ruleId":"231","severity":1,"message":"262","line":24,"column":13,"nodeType":"233","endLine":24,"endColumn":21},{"ruleId":"241","severity":1,"message":"263","line":35,"column":16,"nodeType":"236","messageId":"243","endLine":35,"endColumn":21},{"ruleId":"231","severity":1,"message":"262","line":49,"column":13,"nodeType":"233","endLine":49,"endColumn":21},{"ruleId":"241","severity":1,"message":"264","line":54,"column":13,"nodeType":"236","messageId":"243","endLine":54,"endColumn":23},{"ruleId":"231","severity":1,"message":"265","line":55,"column":13,"nodeType":"233","endLine":55,"endColumn":18},{"ruleId":"231","severity":1,"message":"266","line":8,"column":19,"nodeType":"233","endLine":8,"endColumn":28},{"ruleId":"231","severity":1,"message":"267","line":8,"column":30,"nodeType":"233","endLine":8,"endColumn":34},{"ruleId":"231","severity":1,"message":"268","line":62,"column":31,"nodeType":"236","endLine":62,"endColumn":33},{"ruleId":"231","severity":1,"message":"269","line":102,"column":22,"nodeType":"236","endLine":102,"endColumn":25},{"ruleId":"241","severity":1,"message":"270","line":1,"column":8,"nodeType":"236","messageId":"243","endLine":1,"endColumn":15},{"ruleId":"241","severity":1,"message":"271","line":1,"column":19,"nodeType":"236","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"241","severity":1,"message":"272","line":5,"column":8,"nodeType":"236","messageId":"243","endLine":5,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":47,"column":13,"nodeType":"233","endLine":47,"endColumn":20},{"ruleId":"231","severity":1,"message":"255","line":48,"column":33,"nodeType":"236","endLine":48,"endColumn":44},{"ruleId":"231","severity":1,"message":"246","line":91,"column":13,"nodeType":"233","endLine":91,"endColumn":21},{"ruleId":"231","severity":1,"message":"232","line":17,"column":13,"nodeType":"233","endLine":17,"endColumn":20},{"ruleId":"231","severity":1,"message":"255","line":21,"column":33,"nodeType":"236","endLine":21,"endColumn":44},{"ruleId":"231","severity":1,"message":"235","line":25,"column":25,"nodeType":"236","endLine":25,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":36,"column":13,"nodeType":"233","endLine":36,"endColumn":20},{"ruleId":"231","severity":1,"message":"235","line":44,"column":47,"nodeType":"236","endLine":44,"endColumn":49},"lines-around-directive",["273"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/prop-types","'session' is missing in props validation","Property","'dispatch' is missing in props validation","'session.id' is missing in props validation","Identifier","no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'touched' is defined but never used.","unusedVar","'errors' is defined but never used.","'useEffect' is defined but never used.","'children' is missing in props validation","'visible' is missing in props validation","'close' is missing in props validation","'match' is missing in props validation","'match.params' is missing in props validation","'match.params.roomId' is missing in props validation","'history' is missing in props validation","'history.push' is missing in props validation","'writeLog' is assigned a value but never used.","'session.displayName' is missing in props validation","'error' is defined but never used.",["273"],[],[],[],[],"'onChange' is missing in props validation","'event' is defined but never used.","'isDragging' is assigned a value but never used.","'value' is missing in props validation","'playlists' is missing in props validation","'room' is missing in props validation","'room.id' is missing in props validation","'playlists.map' is missing in props validation","'youtube' is defined but never used.","'API_KEY' is defined but never used.","'firebase' is defined but never used.","padding-line-between-statements"]